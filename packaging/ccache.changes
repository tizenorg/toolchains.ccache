-------------------------------------------------------------------
Sun Aug 21 18:24:58 UTC 2011 - asterios.dramis@gmail.com

- update to ccache-3.1.6
  - Rewrite argument to --sysroot if CCACHE_BASEDIR is used.
  - Don't crash if getcwd() fails.
  - Fixed alignment of "called for preprocessing" counter.

-------------------------------------------------------------------
Mon Jun  6 14:52:55 UTC 2011 - puzel@novell.com

- update to ccache-3.1.5
  - Added a new statistics counter named ``called for
    preprocessing''.
  - The original command line is now logged to the file specified
    with `CCACHE_LOGFILE`.
  - Improved error logging when system calls fail.
  - Added support for rewriting absolute paths in
    `-F`/`-iframework` GCC options.
  - Improved order of statistics counters in `ccache -s` output.
  - The `-MF`/`-MT`/`-MQ` options with concatenated argument are
    now handled correctly when they are last on the commandline.
  - ccache is now bug compatible with GCC for the `-MT`/`-MQ`
    options with concatenated arguments.
  - Fixed a minor memory leak.
  - Systems that lack (and don't need to be linked with) libm are
    now supported.

-------------------------------------------------------------------
Wed Feb 16 18:19:41 UTC 2011 - asterios.dramis@gmail.com

- update to ccache-3.1.4
  - Made a work-around for a bug in gzputc() in zlib 1.2.5.
  - Corrupt manifest files are now removed so that they won't block direct
    mode hits.
  - ccache now copes with file systems that don't know about symbolic links.
  - The file handle in now correctly closed on write error when trying to
    create a cache dir tag.
- Spec file updates:
  - Changes based on rpmdevtools templates and spec-cleaner run.
  - Updated Summary: and %description.
  - Made it compile with external zlib instead of the bundled copy.
  - Added also the html files in the %doc section.

-------------------------------------------------------------------
Mon Nov 29 09:56:02 UTC 2010 - puzel@novell.com

- update to ccache-3.1.3 
  - The -MFarg, -MTarg and -MQarg compiler options (i.e, without
    space between option and argument) are now handled correctly.

-------------------------------------------------------------------
Mon Nov 22 10:58:50 UTC 2010 - puzel@novell.com

- update to ccache-3.1.2 
  - bail out on too hard compiler options '-fdump-*'
  - NULL return values from malloc/calloc of zero bytes are now
    handled correctly
  - improved documentation on which information is included in the
    hash sum
  - made the 'too new header file' test case work on file systems
    with unsynchronized clocks
  - the test suite now also works on systems that lack a /dev/zero

-------------------------------------------------------------------
Mon Nov  8 09:46:57 UTC 2010 - puzel@novell.com

- update to ccache-3.1.1 
  - ccache now falls back to preprocessor mode when a non-regular
    include file (device, socket, etc) has been detected so that
    potential hanging due to blocking reads is avoided.
  - CRC errors are now detected when decompressing compressed files
    in the cache.
  - Fixed potential object file corruption race on NFS.
  - Minor documentation corrections.
  - Fixed configure detection of ar.
  - ccache development version (set by dev.mk) now works with gits
    whose `describe` command doesn't understand `--dirty`.

-------------------------------------------------------------------
Fri Sep 17 09:22:59 UTC 2010 - puzel@novell.com

- update to ccache-3.1 
 - features:
  - Added support for hashing the output of a custom command
    (e.g. `$compiler --version`) to identify the compiler
    instead of stat-ing or hashing the compiler binary.   
  - Added support for caching compilations that use precompiled
    headers.
  - Locking of the files containing statistics counters is now
    done using symlinks instead of POSIX locks.  
  - Manifest files are now updated without the need of taking
    locks.
  - Added `.cp` and `.CP` as known C++ suffixes.
  - Improved logging.
 - bugfixes:
  - Non-fatal error messages are now never printed to stderr but
    logged instead.
  - Fixed a bug affecting failing commands when `--ccache-skip` is
    used.
  - Made `--ccache-skip` work for all options.
  - EINTR is now handled correctly.

-------------------------------------------------------------------
Fri Jul 16 08:15:51 UTC 2010 - puzel@novell.com

- update to ccache-3.0.1 
 - bugfixes:
  - The statistics counter ``called for link'' is now correctly 
    updated when linking with a single object file.
  - Fixed a problem with out-of-source builds.

-------------------------------------------------------------------
Mon Jul 12 11:43:54 UTC 2010 - puzel@novell.com

- update to ccache-3.0
 - notable changes:
 - The way the hashes are calculated has changed, so you won't get
   cache hits for compilation results stored by older ccache
   versions. Because of this, you might as well clear the old
   cache directory with `ccache --clear` if you want, unless you
   plan to keep using an older ccache version.
 - ccache now has a ``direct mode'' where it computes a hash of
   the source code (including all included files) and compiler
   options without running the preprocessor. By not running the
   preprocessor, CPU usage is reduced; the speed is somewhere
   between 1 and 5 times that of ccache running in traditional
   mode, depending on the circumstances. The speedup will be
   higher when I/O is fast (e.g., when files are in the disk
   cache).  The direct mode can be disabled by setting
   +CCACHE_NODIRECT+.
 - Support has been added for rewriting absolute paths to relative
   paths when hashing, in order to increase cache hit rate when
   building the same source code in different directories even
   when compiling with `-g` and when using absolute include
   directory paths. This is done by setting the `CCACHE_BASEDIR`
   environment variable to an absolute path that specifies which
   paths to rewrite.
 - Object files are now optionally stored compressed in the cache.
   The runtime cost is negligible, and more files will fit in the
   ccache directory and in the disk cache. Set `CCACHE_COMPRESS`
   to enable object file compression. Note that you can't use
   compression in combination with the hard link feature.
 - A `CCACHE_COMPILERCHECK` option has been added. This option
   tells ccache what compiler-identifying information to hash to
   ensure that results retrieved from the cache are accurate.
   Possible values are: none (don't hash anything), mtime (hash
   the compiler's mtime and size) and content (hash the content of
   the compiler binary). The default is mtime.
- see /usr/share/doc/packages/ccache/NEWS.txt for complete
  release notes

-------------------------------------------------------------------
Wed Jan 25 21:34:51 CET 2006 - mls@suse.de

- converted neededforbuild to BuildRequires

-------------------------------------------------------------------
Thu Sep 29 03:16:43 CEST 2005 - dmueller@suse.de

 - add norootforbuild

-------------------------------------------------------------------
Wed Sep 28 23:24:29 CEST 2005 - dmueller@suse.de

- add norootforbuild 

-------------------------------------------------------------------
Thu Oct 21 11:56:47 CEST 2004 - ltinkl@suse.cz

- update to version 2.4

-------------------------------------------------------------------
Mon Sep 29 11:38:06 CEST 2003 - ltinkl@suse.cz

- update to version 2.3

-------------------------------------------------------------------
Wed Jul 09 13:28:43 CEST 2003 - ltinkl@suse.cz

- updated sources to version 2.2

-------------------------------------------------------------------
Fri Mar 28 15:38:13 CET 2003 - vbobek@suse.cz

- provides binary from older distcc package [#25806]

-------------------------------------------------------------------
Mon Feb 10 14:32:44 CET 2003 - vbobek@suse.cz

- initial suse release 2.1.1

